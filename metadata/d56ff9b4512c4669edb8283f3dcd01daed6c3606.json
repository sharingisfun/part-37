{"title":"Addison.Wesley.Java.Software.Solutions.7th.Edition.Mar.2011","uid":7001512,"size":11443792,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:d56ff9b4512c4669edb8283f3dcd01daed6c3606&amp;dn=Addison.Wesley.Java.Software.Solutions.7th.Edition.Mar.2011&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":1,"leechers":0,"uploader":"KangChung","files":2,"time":1328082309,"description":"Book Description\nJava Software Solutions teaches a foundation of programming techniques to foster well-designed object-oriented software. Heralded for its integration of small and large realistic examples, this worldwide best-selling text emphasizes building solid problem-solving and design skills to write high-quality programs.\n\nHallmark features of the Lewis series\n\nIntroduces a software methodology early and revisits it throughout to ensure that students build sound program-development skills\nIncludes numerous programming examples, both small and large, that include the program output, sample run, or screenshot display\nProvides a wealth of end-of-chapter programming projects, varying in difficulty level, so students can practice their design skills and implementation of Java programs\nCornerstones of the text\n\nA measured approach to objects first teaches students to use objects before learning to write them. Students see objects in Chapter three (before control structures), and then build their own objects in Chapter five (after control structures).\nSound programming practices teach students how to write good software, not just how to program. Through examples and discussions, students learn how to solve problems and implement solutions using foundational software-engineering techniques.\nFully implemented examples demonstrate specific concepts. Because students learn best through examples, small, readily understandable examples are intertwined with larger, more realistic ones.\nGraphics and GUIs are excellent examples of object orientationÃƒÂ¢Ã¢â€šÂ¬Ã¢â‚¬ï¿½and excellent motivators for students. An optional Graphics Track section covers graphics and GUIs at the end of each chapter, allowing for flexibility of coverage.\nChapter features\n\nEach chapter begins with a list of Chapter Objectives and a short introduction to the chapter topics to orient students.\nKey Concepts highlight fundamental ideas and important guidelines throughout the chapter and are summarized in the end-of-chapter material.\nAll programming examples are presented in clearly labeled listings. The code is colored to visually distinguish comments and reserved words, and followed by the program output, a sample run, or a screenshot where appropriate.\nSyntactic elements of the Java language are discussed in special highlighted syntax diagram sections. Diagrams clearly identify the valid forms for a statement or construct.\nReview materials\n\nThe Key Concepts presented throughout the chapter are summarized at the end.\nShort-answer Self-Review Questions review fundamental ideas and terms. Answers are provided at the end of the problem sets.\nProbing Exercises require computations and/or the analysis or writing of code fragments. While they may deal with code, these exercises generally do not require any online activity.\nProgramming Projects require the design and implementation of Java programs.\nVideoNotes, created by author John Lewis, provide extra examples and demonstrate how to solve problems. Icons throughout the text and a complete index of the videos on the inside covers indicate where a VideoNote accompanies a particular chapter topic or an end-of-chapter Programming Project. The Video Notes are available to instructors and students on a companion web site.\nTable of Contents\nChapter 1. Introduction\nChapter 2. Data and Expressions\nChapter 3. Using Classes and Objects\nChapter 4. Writing Classes\nChapter 5. Conditionals and Loops\nChapter 6. More Conditionals and Loops\nChapter 7. Object-Oriented Design\nChapter 8. Arrays\nChapter 9. Inheritance\nChapter 10. Polymorphism\nChapter 11. Exceptions\nChapter 12. Recursion\nChapter 13. Collections\n\nAppendix A. Glossary\nAppendix B. Number Systems\nAppendix C. The Unicode Character Set\nAppendix D. Java Operators\nAppendix E. Java Modifiers\nAppendix F. Java Coding Guidelines\nAppendix G. Java Applets\nAppendix H. Regular Expressions\nAppendix I. Javadoc Documentation Generator\nAppendix J. The PaintBox Project\nAppendix K. GUI Events\nAppendix L. Java Syntax\nAppendix M. The Java Class Library\nAppendix N. Answers to Self-Review Questions\nIndex\n\nBook Details\nPaperback: 832 pages\nPublisher: Addison Wesley; 7th Edition (March 2011)\nLanguage: English\nISBN-10: 0132149184\nISBN-13: 978-0132149181","torrent":{"xt":"urn:btih:d56ff9b4512c4669edb8283f3dcd01daed6c3606","amp;dn":"Addison.Wesley.Java.Software.Solutions.7th.Edition.Mar.2011","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"d56ff9b4512c4669edb8283f3dcd01daed6c3606","infoHashBuffer":{"type":"Buffer","data":[213,111,249,180,81,44,70,105,237,184,40,63,61,205,1,218,237,108,54,6]},"announce":[],"urlList":[]}}